
/*<VersionHead>
 ***************************************************************************************************
 * This Configuration File is generated using versions (automatically filled in) as listed below.
 *
 * $Generator__: IpduM / AR42.4.0.0                 Module Package Version
 * $Editor_____: 2.3.0.4                 Tool Version
 * $Model______: 9.0                 ECU Parameter Definition Version
 ***************************************************************************************************
 </VersionHead>*/

/**
 ***************************************************************************************************
 * \moduledescription
 *                      IPDUM configuration header file. This file is generated by CUBEC
 *
 * \scope               This is included by the IpduM.h file. Hence, all the parameters are exported.
 ***************************************************************************************************
 */
#ifndef IPDUM_CFG_H
#define IPDUM_CFG_H
/**
 *@ingroup IPDUM_CFG_H
 *
 * Vendor Id refers to a unique ID assigned by Autosar to every Member of Autosar Consortium, used to indicate the vendor during the call of Det_ReportError()\n
 */
#define IPDUM_VENDOR_ID            6u

/**
 * @ingroup IPDUM_CFG_H
 *
 * Module Id refers to a unique ID assigned by Autosar to every Module/Component within the Autosar BSW, used to indicate that module which is reporting the error during the call of Det_ReportError()\n
 */
#define IPDUM_MODULE_ID            52u

/**
 * @ingroup IPDUM_CFG_H
 *
 * Used to declare Software Major Version number of Component IpduM, used during the call of IpduM_GetVersionInfo()
 */
#define IPDUM_SW_MAJOR_VERSION            4u

/**
 * @ingroup IPDUM_CFG_H
 *
 * Used to declare Software Minor Version number of Component IpduM, used during the call of IpduM_GetVersionInfo()
 */
#define IPDUM_SW_MINOR_VERSION            0u
/**
 * @ingroup IPDUM_CFG_H
 *
 * Used to declare Software Patch Version number of Component IpduM, used during the call of IpduM_GetVersionInfo()
 */
#define IPDUM_SW_PATCH_VERSION            0u



/*
 ***************************************************************************************************
 * Includes
 ***************************************************************************************************
 */

#define IPDUM_DEV_ERROR_DETECT                (STD_OFF)

#define IPDUM_VERSION_INFO_API                (STD_OFF)

#define IPDUM_TX_PATHWAY                    (STD_OFF)
#define IPDUM_RX_PATHWAY                    (STD_ON)
#define IPDUM_RXDIRECT_COMINVOCATION        (STD_OFF)


#define IPDUM_CONTAINER_TX_PDU              (STD_OFF)


#define IPDUM_CONTAINED_TX_PDU              (STD_OFF)


#define IPDUM_CONTAINER_RX_PDU              (STD_OFF)


#define IPDUM_CONTAINED_RX_PDU              (STD_OFF)

/* PDU Details */
#define IPDUM_NUM_TX_IPDUS                   0

/********************************************************************************************************/
/* Description :  Max Pdu Index for FULL IPDUM Pdus is based on ecuC.ecucConfigSet.ecucPduCollection.pduIdTypeEnum selection       */
/* Range       :  0xFFu/ 0xFFFFu                                                                                    */
/********************************************************************************************************/
#define IPDUM_INVALID_INDEX                  0xFFFFu

#define IPDUM_NUM_RX_IPDUS                   22

#define IPDUM_NUM_TX_MPDUS                   0

#define IPDUM_NUM_RX_MPDUS                   4

#define IPDUM_NUM_TX_SUBPARTS                0

#define IPDUM_NUM_RX_SUBPARTS                38

#define MAX_COM_IPDU_SIZE                    64

/*Defines the total number of Container and contained Tx Pdu's*/
#define IPDUM_NUM_CONTAINER_TX_PDUS          0u

/*Defines the total number of Contained Tx Pdu's*/
#define IPDUM_NUM_CONTAINED_TX_PDUS          0u

/*Defines the total number of Container Rx Pdu's*/
#define IPDUM_NUM_CONTAINER_RX_PDUS          0u

/*Defines the total number of Contained Rx Pdu's*/
#define IPDUM_NUM_CONTAINED_RX_PDUS          0u

/*Defines the total number of Tx Pdu's (ContainedTxPdu's + RegularTxPdu's)*/
#define IPDUM_TOTAL_NUM_TX_IPDUS             0u

/*Defines the total number of Tx MPdu's (ContainerTxPdu's + RegularTxMpdu's)*/
#define IPDUM_TOTAL_NUM_TX_MPDUS             0u

/*Defines the total number of Rx Pdu's (ContainedRxPdu's + RegularRxPdu's)*/
#define IPDUM_TOTAL_NUM_RX_IPDUS             4u



/* Configuration Time base for IpduM_MainFunctionRx */
#define IPDUM_CONFIGURATION_TIMEBASE_RX         10000u


/* Configuration Time base for IpduM_MainFunctionTx */
#define IPDUM_CONFIGURATION_TIMEBASE_TX         10000u




/* Macro for information regarding RTE used in the project or not */


#define IPDUM_ECUC_RB_RTE_IN_USE            (STD_ON)




/* Tx Handle IDs For Static and Dynamic Pdu's*/

/* Tx Mpdus list */


/* Rx Handle IDs */
#define IpduMConf_IpduMRxIndication_AFC2_EOLTester_Confirm_Multiplexed_IPDU_Can_Network_CANNODE_3_PduR2IpduM        0
#define IpduMConf_IpduMRxIndication_AFC_EOLTester_Confirm_Multiplexed_IPDU_Can_Network_CANNODE_1_PduR2IpduM        1
#define IpduMConf_IpduMRxIndication_Tester2_18FFFA01h_Multiplexed_IPDU_Can_Network_CANNODE_3_PduR2IpduM        2
#define IpduMConf_IpduMRxIndication_Tester_18FFFA01h_Multiplexed_IPDU_Can_Network_CANNODE_1_PduR2IpduM        3





/* IpduM RxIPdu Buffers */
/* ------------------------------------------------------------------------ */
/* Begin section for variables(Uint8) */

#define IPDUM_START_SEC_VAR_CLEARED_8
#include "IpduM_MemMap.h"
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer0[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer1[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer2[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer3[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer4[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer5[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer6[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer7[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer8[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer9[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer10[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer11[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer12[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer13[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer14[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer15[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer16[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer17[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer18[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer19[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer20[8];
extern VAR(uint8, IPDUM_VAR)    IpduM_RxBuffer21[8];
/* ------------------------------------------------------------------------ */
/* End section for variables(Uint8) */

#define IPDUM_STOP_SEC_VAR_CLEARED_8
#include "IpduM_MemMap.h"

/* ------------------------------------------------------------------------ */
/* Begin section for code */

#define IPDUM_START_SEC_CODE
#include "IpduM_MemMap.h"
/*IpduM_InitValues function Prototype*/
extern FUNC( void, IPDUM_CODE ) IpduM_InitValues(void);
/* ------------------------------------------------------------------------ */
/* End section for code */

#define IPDUM_STOP_SEC_CODE
#include "IpduM_MemMap.h"







#endif


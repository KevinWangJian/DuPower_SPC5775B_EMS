/** @file     Rte_Cmu_Cdd.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.4.1 
  */

#ifndef RTE_CMU_CDD_H
#define RTE_CMU_CDD_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
//#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_Cmu_Cdd_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_Cmu_Init)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_Cmu_Cdd {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_Cmu_Cdd Rte_CDS_Cmu_Cdd;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_Cmu_Cdd, RTE_CONST) Rte_Inst_Cmu_Cdd;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_Cmu_Cdd, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_Cmu_Cdd_PPort_CmuValue_CellLeakageDiagStatus_flg(P2CONST(uint16, AUTOMATIC, RTE_APPL_DATA) data);
#define RTE_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001315;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001316;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_001317;
#define RTE_STOP_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001319;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001320;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001321;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001322;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_001323;
#define RTE_STOP_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001324;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_001325;
#define RTE_STOP_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001326;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_001327;
#define RTE_STOP_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001336;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001351;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_001362;
#define RTE_STOP_SEC_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_BalOpenLoadDiagStatus_flg to direct write */
#define Rte_Write_PPort_CmuValue_BalOpenLoadDiagStatus_flg( data ) ( (Rte_Rx_001315 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_CMUPwrDiagVoltVld_flg to direct write */
#define Rte_Write_PPort_CmuValue_CMUPwrDiagVoltVld_flg( data ) ( (Rte_Rx_001316 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_CMUPwrDiagVolt_V to direct write */
#define Rte_Write_PPort_CmuValue_CMUPwrDiagVolt_V( data ) ( (Rte_Rx_001317 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
#define Rte_Write_PPort_CmuValue_CellLeakageDiagStatus_flg( data ) (Rte_Write_Cmu_Cdd_PPort_CmuValue_CellLeakageDiagStatus_flg(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_ChanelFuncDiagStatus_flg to direct write */
#define Rte_Write_PPort_CmuValue_ChanelFuncDiagStatus_flg( data ) ( (Rte_Rx_001319 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_CmuReCfgStatus_flg to direct write */
#define Rte_Write_PPort_CmuValue_CmuReCfgStatus_flg( data ) ( (Rte_Rx_001320 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_CtxOpenDiagStatus_flg to direct write */
#define Rte_Write_PPort_CmuValue_CtxOpenDiagStatus_flg( data ) ( (Rte_Rx_001321 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_GpioOTUTFuncDiagStatus_flg to direct write */
#define Rte_Write_PPort_CmuValue_GpioOTUTFuncDiagStatus_flg( data ) ( (Rte_Rx_001322 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_GpioxOpenDiagStatus_flg to direct write */
#define Rte_Write_PPort_CmuValue_GpioxOpenDiagStatus_flg( data ) ( (Rte_Rx_001323 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMDutyVld_flg to direct write */
#define Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMDutyVld_flg( data ) ( (Rte_Rx_001324 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMDuty_pct to direct write */
#define Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMDuty_pct( data ) ( (Rte_Rx_001325 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMFeqVld_flg to direct write */
#define Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMFeqVld_flg( data ) ( (Rte_Rx_001326 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMFeq_Hz to direct write */
#define Rte_Write_PPort_CmuValue_InCMUHWAlarmPWMFeq_Hz( data ) ( (Rte_Rx_001327 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_CurrValue_K7K8AuxIn_flg to direct write */
#define Rte_Write_PPort_CurrValue_K7K8AuxIn_flg( data ) ( (Rte_Rx_001336 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_HVValue_K13LSDStatysIn_flg to direct write */
#define Rte_Write_PPort_HVValue_K13LSDStatysIn_flg( data ) ( (Rte_Rx_001351 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Cmu_MainFunction)
/* Inline Write optimization; Rte_Write_PPort_HVValue_QF1LSDStatysIn_flg to direct write */
#define Rte_Write_PPort_HVValue_QF1LSDStatysIn_flg( data ) ( (Rte_Rx_001362 = data), RTE_E_OK )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define Cmu_Cdd_START_SEC_CODE
#include "Cmu_Cdd_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, Cmu_Cdd_CODE) Cmu_MainFunction(void);
#define Cmu_Cdd_STOP_SEC_CODE
#include "Cmu_Cdd_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_CMU_CDD_H */
